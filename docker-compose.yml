version: "3.2"

networks:
   frontend:
   backend:

services:
   webmvc:
      build:
         context: src\Web\Store
         dockerfile: Dockerfile
      environment:
         - APPLICATION_ENVIRONMENT=Development
         - CatalogUrl=http://catalog
         - IdentityUrl=localhost:5100
         - CallBackUrl=http://webmvc
      container_name: storefront
      ports:
         - "5500:80"
      networks:
         - frontend
      depends_on:
         - catalog
         - tokenserver
   tokenserver:
      build:
         context: src\Services\TokenService
         dockerfile: Dockerfile
      environment:
         -  APPLICATION_ENVIRONMENT=Development
         -  DatabaseServer=mssqlserver
         -  DatabaseName=tokenservice
         -  DatabaseUser=sa
         -  DatabasePassword=Sa@admin
         -  mvcClient=localhost:5500
      container_name: tokenserver
      ports:
         - "5100:80"
      networks:
         - backend  
         - frontend
      depends_on:
         - mssqlserver 
  
   catalog:
      build:
         context: src\Services\Products
         dockerfile: Dockerfile
      environment:
         - DatabaseServer=mssqlserver
         - DatabaseName=vertecommerce_product
         - DatabaseUser=sa
         - DatabasePassword=Sa@admin
      container_name: catalogapi
      ports:
         - "5000:80"
      networks:
         - backend
         - frontend
      depends_on:
         - mssqlserver
   mssqlserver:
      image:  "microsoft/mssql-server-linux:latest"
      ports:
         - "1445:1433"

      container_name: mssqlcontainer
      environment:
         - ACCEPT_EULA=Y
         - SA_PASSWORD=Sa@admin
      networks:
         - backend  



   cart:
      image: cartimage
      build:
         context: src\Services\cart
         dockerfile: Dockerfile 
      environment:
         - APPLICATION_ENVIRONMENT=Development
      container_name: cart
      ports:
         - "5200:80"
      networks:
         - frontend
         - backend 
      depends_on:
         - basket.data


   basket.data:
      image: redis
      ports:
         - "6377:6379"  
      networks:
         - backend 